# 파일업로드와 다운 로드
1. 기능
	1) 특정 파일을 등록하고, 서버의 특정 경로에 파일을 업로드 처리한다.
	2) 파일의 이름을 클릭하면, 서버에서 client로 파일을 다운로드 처리한다.
2. 환경 설정
	1) 스프링에서 지원하는 파일업로드 모듈 컨테이너에 설정
		<bean id="multipartResolver"
			class="org.springframework.web.multipart.CommonsMultipartResolver"/>
	2) 사용자 정의 다운로드 뷰 컨테이너 선언
	3) 공통 설정 파일 conf
		파일 서버의 경로 위치를 지정  filupload=c:\....
3. 개발 순서
	1) 업로드 화면 (jsp)
		- 업로드 파일 객체
			<input type="file" name="report"/>
		- form에서 파일을 stream으로 전달할 수 있는 속성값을 설정
			<form enctype="multipart/form-data"
	2) 컨트롤단 처리
		- 업로드 하는 파일을 받을 수 있는 요청객체 선언
			단일 데이터
				public String upload(@RequestParam("report")
								 MultipartFile file)
			
			VO 객체형
				class Board{
					private MultipartFile report;
					public void setReport(MultipartFile m)..
				}
				public String upload(Board board)
	3) 서비스단 처리(springweb.a05_mvc.a02_service.A05_FileService.java)
		- 네트웍을 통해 객체로 전달된 MultipartFile을 특정한 물리적
			위치로 저장할 수 있는 File 객체로 변환하여야 한다.
			@Value("${upload}") : conf파일에서 설정한 물리적 업로드 경로를 가져온다.
			private String upload;
			public String uploadFile(MultipartFile report){
				report.transferTo(파일객체)
			}
			
		- File객체는 특정한 물리적 위치기반 파일 생성. 				
			 공통 파일로 지정한 ${filupload}로 파일 위치를 접근하여
			 업로드 처리할 수 있다.
		- MultipartFile ==> File 변환	 	
		ex) 게시판의 경우는 업로드 파일 정보를 특정한 게시물과 연관관계를
			설정하여야지 첨부파일로 처리할 수 있다.	
# 업로드된 파일 재활용
1. 업로드된 파일을 기준으로 이미지 화면을 보거나 다시 첨부파일로 등록 하여 사용할 때
2. DB에 등록하여 다른 정보와 함께 처리하여야 한다.
3. DB 등록 처리를 위한 처리
	1) DB 만들기 
		table filerep (no, title, path, tmpFile, fname, etc, regdte, uptdte)
			번호, 파일내용, 경로, 임시파일명, 실제파일, 기타, 등록일, 수정일
		sequence file_seq	
		create table filerep(
			no number,
			title varchar2(100),
			path varchar2(500),
			tempfile varchar2(100),
			fname varchar2(100),
			etc varchar2(200),
			regdte date,
			uptdte date
		);	
		create sequence file_seq
			start with 1000
			minvalue 1000;
		insert into filerep values(file_seq.nextval,'첨부파일', '경로..',
			'file'||file_seq.currval
			,'a01.txt','',sysdate,sysdate);
		select * from filerep
		where title like '%'||''||'%';
		
	2) vo만들기
		FileRep.java
		no, title, path, tempfile, fname, etc, regdte, uptdte
	3) mybatis 공통 	
		filerep
		fileMapper.xml(A05_FileMapper.xml)
	4) dao
		A05_FileDao.java
		public void insertFile(FileRep ins);
		public List<FileRep> getFileList(String fname)
	5) mapper
		springweb.a05_mvc.a03_dao.A05_FileDao
		<insert id="insertFile" parameterType="filerep">
			insert into filerep values(file_seq.nextval,#{title}, #{path},
				'file'||file_seq.currval
				,#{fname},#{etc},sysdate,sysdate)			
		</insert>	
		<select id="getFileList" parameterType="string" resultMap = "filerep">
			select * from filerep
			where title like '%'||#{fname}||'%'			
		</select>
---------------------------------------------
# 파일업로드 및 업로드된 리스트 정보 확인..
1. 초기화면 호출
	A05_FileUploadController.java
	
	/fileList.do (get/post방식) - 업로드 및 리스트 확인
	
	WEB-INF\views\a05_mvc\a13_fileUpLoadList.jsp
		- 조회할 form
			schTitle
	
		- 등록할 form
			title, etc, report(파일객체)  form으로 추가하여 처리할 수 있게 화면 구성
2. 서비스단 처리(springweb\a05_mvc\a02_service\A05_FileService.java)
    0) VO객체 파일 업로드 가능하게 report속성으로 MultiPartFile로 추가
	1) 업로드 메서드
		public void insertFile(FileRep ins);
		파일을 업로드 하는 기능메서드 구현
		업로드 위치 지정 
		요청값으로 온 FileRep 내용(타이틀)을 가지고,
			경로 정보, 파일명 설정 
			#{path},,#{fname}			
		dao단에 insertFile
	2) 리스트 메스트메서드
		public List<FileRep> getFileList(String schTile, FileRep ins){
			// 정의된 등록 메서드 처리
			insertFile(ins)
			return dao.getFileList(schTile); # 검색하는 title로 처리
		}
		
	
		
	
	

	
	
	
	


		
		




 		
		
						