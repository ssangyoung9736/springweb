# 주요학습범위
1. 웹 소켙 통신을 통한 실시간 채팅 처리
2. 메일 발송

# 생각해봅시다.
1. 소켙 통신이란 무엇이며 어떻게 처리되어야 하는가?
2. 웹에서 실시간으로 통신하기 위해서 어떤 환경적 구성이 필요로 하는가?
3. 메일 발송을 위해 어떤 개발 환경이 필요할까?

# 학습목표
1. 웹 개발 환경에서 실시간 소켓 통신의 개념을 알고, 웹 개발 환경을 구성할 수 있다.
2. 스프링 환경에서 채팅을 하기위한 개발 코드를 알고, 확장하여 처리할 수 있다.
3. 메인 발송을 위한 개발 환경을 이해하고, 스프링환경에서 메일 발송을 처리할 수 있다.
 
# 주요핵심 개념 및 keyword
1.  
2. 
3. 

# 발표 
1. 2조부터 발표 진행하겠습니다.
	중점 사항 : 단위 테스트 진행 내용
	일정 진행 이슈사항
2. 조별로 발표 순서 올려주세요.
	발표자료/소스 공유
3. 조별로 도입 및 발전사항 정리해서 발표가 마친 후, 전달해주세요.


# 공통
1. 수업 중 진행된 내용은 추가하여 기능 하나라도 응용 적용
2. 화면설계서/화면구현/DB 실무 업무 내용 정리
	test, aaa, 프로젝트1 (X) : 실제 진행되는 업무 데이터 입력
	
	ex) 이영철, 온라인커뮤니티
	
3. [우선순위 후순위] : 가능한한 진행, 후순위에 업무 플로우에 맞게 경쟁력 있는 처리, 
	= 반드시 강조해서 세심한 처리했다는 걸 표시
4. 단위테스트 시나리오를 조금 더 세부적으로 추가
 	- git 서버 연동 ex) ip 및 계정르로 @@@로 설정된 git서버가 정상적으로 연동이 되는지 확인한다. ==> 정상 진행 확인
    - vpn을 통한 고정아이피 설정
	- DB 서버 연동
	- 웹서버 연동
	- 초기화면 로딩
	- mybatis를 통해 DB 연동 처리 확인
	...
	등 서버단 테스트 내용을 더 추가 하여 시스템적으로 처리 설정한 내용을 시나리오로 정리(타조 테스트 시나리오 확인)
	문제가 있으면 해당 내용을 어떻게 처리 되었는지 표기
5. 지난 주 피드백 미적용 내용 사유 정리 필요..
	- 명확하게 표기 

11:10 캡쳐
~11:50 조별로 발전사항 정리, 피드백 사항 진행계획 수립 전달
피드백 항목
==> 적용계획 구체적으로 정리해서 전달..

# 금주에 단위테스트 진행
1. 결과물을 정리해서 중간발표시 포함
	1) QA란 무엇인가
	2) 단위테스트란 무엇인가
	3) 단위테스트 시나리오 작성 : 서버 설정/공통-스프링설정/DB연동 관련해서
	4) 단위테스트 진행 담당자 및 결과 내용 정리
	5) 결과에 따를 조치 내용
	

# 프로젝트 기간 수업시간 진행 설문(익명)
1. 금주 오전(4시간), 다음 주 오전 2시간(소스제공+기존진행 병행)
2. 이번주부터 오전 2시간(소스제공식 수업진행)
3. 끝날때까지(4시간- 기존 진행 방식)
4. 기타(추가해서 등록) 

# 14:00에 오늘 진행 계획과 현재 이슈사항 취합해서 전달 부탁드립니다.



# 발표
1. 1조부터 발표
2. 다른 조의 내용을 보고, 현재 조에 도입하여 개선될 사항
3. 현재 조에서 발표 내용을 보면서 개선할 내용 정리
4. 3개조 발표가 끝나면 해당 정리된 내용 - 부조장님이 정리해 전달
5. 피드백 내용과 함께 실제 처리할 수 있는 방안 조원들과 협력해서 최종적으로 월요일까지 전달.
	10:50~ 협의 조별로 전달..


6. 단위테스트와 통합테스트
	1) 단위테스트 : 시스템구성, 단위시나리오 정리
		- 진행 단계 프로세스에 반드시 포함(주단위)

# 공통
1. 목차를 각 화면에서 어디에 있는지 표현할 수 있도록
    1) 옆에 
2. 업무별 진행 단계 표현(요청사항정의서 옆이나 따로 페이지를 만들어 표현) 
	- 현 진행현황 및 이슈사항 항목
    진행단계 : 요구사항/ERD/화면설계/프런트개발/
    			백앤드개발/단위테스트/통합테스트/완료
    분류 요구사항 내용 담당자 진행단계 진행율 이슈사항
    
3. ppt 요청 필수 항목들을 기본적으로 진행할 수 있도록 합니다.
    1) 전체 목차를 표기
    2) 목차내용은 사전에 올린 내용 포함하여 처리 양식을 만들어 표현
    
4. 업무 담당 : 실제 개발진행에서 필요로 하는 업무 담당을 표기
    1) 공통 : 개발 프로세스의 특정 내용
    2) 자기업무 : 업무내용
5. ERD 표기(현업에서 사용하는 방식 표현- 물리/논리설계)

# 오늘 진행한 내용 피드백 2/20(월) 협의 반영 

	


# 스프링 실무 예제
(완료)1. 로그인 세션처리
(완료)2. 답변형 게시판(R1)
(완료)3. jquery query 프러그인 스프링 연동(fullcalendar api)
	(R2) ajax(json) 
4. 메일 발송
(완료)5. 다국어 처리
6. 웹 소켙 통신을 통한 실시간 채팅 처리
(완료)7. Vue 처리
8. 스프링 boot 게시판(vue+boot)
9. AWS 실무 예제 (ec2서버 - 클라우드 웹서비스 처리)



# 최종 발표
1. 전체 내용 발표 진행(4조)
2. 시연 포함 진행
3. 타조 내용 도입 사항 정리해서 전달
	
# 공통
1. 사전 시연 테스트(특히, 최종 발표시 문제가 발생하지 않도록 사전에 절차 프로세스 정리)
==> 개인/조전체.
2. 비지니스 로직/다른 조에서 진행된 내용 확인
==> 발표 내용이나 합리적인 의사결정에 필요한 내용을 정리
3. 여러가지 리스크가 있더라도 정상 진행할 수 있는 프로세스 만들기
    - 개인 사정 및 진행율 문제시, 유동적으로 역할 분담 진행 가능하도록
4. 데이터 정렬/표시 처리
   1) 숫자 천단위 콤마(,), 오른쪽 정렬
   2) 코드성 데이터 중앙정렬
   3) 일반 문자데이터 왼쪽 정렬
   
1조 김세영 김중휘 허다솜 이희준 신아령 이지원
2조 이수민 손원주 박종은 김은빈 한정우 유민우 
3조 이정명 이윤아 김동은 정유진 전윤환 황미리

월 김세영 김중휘 허다솜 이희준 신아령 이지원
화 
수 이수민 손원주 박종은 김은빈 한정우 유민우 
목 
금 이정명 이윤아 김동은 정유진 전윤환 황미리   	
	
~ 15:10 조원 확인/조장/부조장 명단 전달	
	
1.주제선택
	경쟁력 있는 실무 프로젝트를 추천
	1) PLM
	2) ERP
	3) PMS(*) - gantt chart
	4) 쇼핑몰이나 기존에 자신있는 주제.	
2. front단 부담 
	1) bootstrap 템플릿(선택)
3. 환경 구성
	1) 고정IP 활용
	2) DB/git/svn/스프링 기본환경
4. 산출물 양식 구성
	1) PPT 양식 템플릿 선택(목차 정리, 핵심 템플릿 우선 작성)		
		- 타이틀 초기 화면
		- 내용(목차)
		- 프로젝트 소개
			주제에 대한 소개
			구현 범위
			개발환경
			핵심기술
		- 조원소개
			역할분담(*) - 공통 설계 분석 공유 참석, 각각 프로세스
				같이 점검
			일정계획(*)
		- 설계
			요구사항정의서(*)
			DB설계서
			화면설계서
		- 기능 구현
			구현한 기능..
		- QA
			단위테스트
				- 주간단위로 조에 조원 개발한 내용 테스트 결과
				- 코드 리뷰 결과 정리
			통합테스트
				- 마지막 3일 정도 조별로 crossing 테스트
				- 테스트 에러 및 수정 결과 산출물로 남기기
		- 산출물
			피드백
			회의록(회의록 양식)
		- 최종리뷰
# 다음 주 일정계획
1. 2/13(월) : 위 내용 선정 및 템플릿 선택, 주제 및 역할 분담
	요구사항 정의서
	일정/역할분담
	조장/부조장 체계
2. 주단위 진행 프로세스
	월 : 지난 주 피드백 반영 및 검토 시간
	화 : 반영 내용 재검토 
	수 : 최종 반영 확인
	목 : 중간 발표 자료 전달(17:00) 
	금 : 중간 발표 및 피드백
	1) 조별 단위 테스트 요일 
	2) 조별 코드 리뷰 요일
	3) 일일 - 일정 점검 및 리스크 관리(개발 일정 문제/이슈사항 확인)
		   - 개발 진행 내용을 같이 공유할 수 있도록 합니다. 
	
3. 월단위 진행 프로세스
	1) 1주차 설계/개발환경 구성 및 front단 구현 
			공통 구현(공통css/공통js/공통 DB)
	2) 2주차 각 담당자별 1순위 개발 내용 진행
	3) 3주차 각 담당자별 2순위 개발 내용 진행
	4) 4주차 각 담당자별 3순위 개발 
	5) 5주차 통합테스트 및 리허설 최종 발표




